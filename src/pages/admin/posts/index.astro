---
import AdminLayout from '../../../components/admin/AdminLayout.astro';
import db from '../../../db/database';
import { formatDateTime } from '../../../utils/formatters';

// Get query parameters
const status = Astro.url.searchParams.get('status') || 'all';
const page = parseInt(Astro.url.searchParams.get('page') || '1');
const limit = 20;
const offset = (page - 1) * limit;

// Build query conditions
let conditions = '';
let params: any[] = [];

if (status !== 'all') {
  conditions = 'WHERE p.status = ?';
  params.push(status);
}

// Get total count
const countResult: any = await db.query(`
  SELECT COUNT(*) as total 
  FROM posts p 
  ${conditions}
`, params);

const total = countResult[0].total;
const totalPages = Math.ceil(total / limit);

// Fetch posts
const posts: any = await db.query(`
  SELECT p.*, 
         u.username, u.full_name,
         c.name as category_name
  FROM posts p
  LEFT JOIN users u ON p.author_id = u.id
  LEFT JOIN categories c ON p.category_id = c.id
  ${conditions}
  ORDER BY p.created_at DESC
  LIMIT ? OFFSET ?
`, [...params, limit, offset]);
---

<AdminLayout title="Manage Posts">
  <!-- Header Actions -->
  <div class="mb-6 flex flex-col sm:flex-row justify-between items-center gap-4">
    <div class="flex items-center space-x-2">
      <a
        href={`/admin/posts?status=all`}
        class={`px-3 py-2 rounded-md text-sm font-medium ${
          status === 'all' ? 'bg-primary-100 text-primary-700' : 'text-gray-600 hover:bg-gray-100'
        }`}
      >
        All
      </a>
      <a
        href={`/admin/posts?status=published`}
        class={`px-3 py-2 rounded-md text-sm font-medium ${
          status === 'published' ? 'bg-green-100 text-green-700' : 'text-gray-600 hover:bg-gray-100'
        }`}
      >
        Published
      </a>
      <a
        href={`/admin/posts?status=draft`}
        class={`px-3 py-2 rounded-md text-sm font-medium ${
          status === 'draft' ? 'bg-yellow-100 text-yellow-700' : 'text-gray-600 hover:bg-gray-100'
        }`}
      >
        Drafts
      </a>
      <a
        href={`/admin/posts?status=archived`}
        class={`px-3 py-2 rounded-md text-sm font-medium ${
          status === 'archived' ? 'bg-gray-100 text-gray-700' : 'text-gray-600 hover:bg-gray-100'
        }`}
      >
        Archived
      </a>
    </div>

    <a
      href="/admin/posts/new"
      class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
      </svg>
      New Post
    </a>
  </div>

  <!-- Posts Table -->
  <div class="bg-white shadow-sm rounded-lg overflow-hidden">
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Title
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Author
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Category
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Status
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Date
            </th>
            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
              Actions
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          {posts.map((post: any) => (
            <tr>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="flex items-center">
                  <div class="flex-shrink-0 h-10 w-10">
                    <img
                      class="h-10 w-10 rounded object-cover"
                      src={post.featured_image || '/images/default-post.jpg'}
                      alt=""
                    />
                  </div>
                  <div class="ml-4">
                    <div class="text-sm font-medium text-gray-900">
                      <a href={`/admin/posts/edit/${post.id}`} class="hover:text-primary-600">
                        {post.title}
                      </a>
                    </div>
                    <div class="text-sm text-gray-500">
                      {post.views} views
                    </div>
                  </div>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-900">{post.full_name || post.username}</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-900">{post.category_name || 'Uncategorized'}</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                  post.status === 'published' ? 'bg-green-100 text-green-800' :
                  post.status === 'draft' ? 'bg-yellow-100 text-yellow-800' :
                  'bg-gray-100 text-gray-800'
                }`}>
                  {post.status.charAt(0).toUpperCase() + post.status.slice(1)}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                {formatDateTime(post.created_at)}
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                <a href={`/admin/posts/edit/${post.id}`} class="text-primary-600 hover:text-primary-900 mr-3">
                  Edit
                </a>
                <button
                  data-post-id={post.id}
                  class="text-red-600 hover:text-red-900 delete-post"
                >
                  Delete
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>

    <!-- Pagination -->
    {totalPages > 1 && (
      <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
        <div class="flex-1 flex justify-between sm:hidden">
          <a
            href={`/admin/posts?status=${status}&page=${page - 1}`}
            class={`relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 ${
              page === 1 ? 'opacity-50 cursor-not-allowed' : ''
            }`}
          >
            Previous
          </a>
          <a
            href={`/admin/posts?status=${status}&page=${page + 1}`}
            class={`ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 ${
              page === totalPages ? 'opacity-50 cursor-not-allowed' : ''
            }`}
          >
            Next
          </a>
        </div>
        <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
          <div>
            <p class="text-sm text-gray-700">
              Showing <span class="font-medium">{offset + 1}</span> to{' '}
              <span class="font-medium">{Math.min(offset + limit, total)}</span> of{' '}
              <span class="font-medium">{total}</span> results
            </p>
          </div>
          <div>
            <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
              <a
                href={`/admin/posts?status=${status}&page=${page - 1}`}
                class={`relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 ${
                  page === 1 ? 'opacity-50 cursor-not-allowed' : ''
                }`}
              >
                <span class="sr-only">Previous</span>
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
              </a>
              {Array.from({ length: totalPages }, (_, i) => i + 1).map((pageNum) => (
                <a
                  href={`/admin/posts?status=${status}&page=${pageNum}`}
                  class={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${
                    pageNum === page
                      ? 'z-10 bg-primary-50 border-primary-500 text-primary-600'
                      : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'
                  }`}
                >
                  {pageNum}
                </a>
              ))}
              <a
                href={`/admin/posts?status=${status}&page=${page + 1}`}
                class={`relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 ${
                  page === totalPages ? 'opacity-50 cursor-not-allowed' : ''
                }`}
              >
                <span class="sr-only">Next</span>
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                </svg>
              </a>
            </nav>
          </div>
        </div>
      </div>
    )}
  </div>
</AdminLayout>

<script>
  // Handle post deletion
  document.querySelectorAll('.delete-post').forEach(button => {
    button.addEventListener('click', async (e) => {
      const postId = (e.target as HTMLButtonElement).dataset.postId;
      
      if (!confirm('Are you sure you want to delete this post? This action cannot be undone.')) {
        return;
      }
      
      try {
        const response = await fetch(`/api/posts/${postId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        });
        
        if (response.ok) {
          // Reload the page to show updated list
          window.location.reload();
        } else {
          alert('Failed to delete post. Please try again.');
        }
      } catch (error) {
        console.error('Error deleting post:', error);
        alert('An error occurred while deleting the post.');
      }
    });
  });
</script>